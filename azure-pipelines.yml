name: $(Build.SourceBranchName).$(Date:yyyyMMdd).$(Rev:r)
trigger:
  - main
# trigger:  
#   batch: true

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: 'ubuntu-latest'
          demands: $(CapabilityName) -equals $(CapabilityValue)
        # steps:
        #   - template: .azurepipelines/templates/build-template.yaml
        steps:
          - script: |
              COMMIT=$BUILD_SOURCEVERSION
              SHORTHASH=${COMMIT:0:7}
              OLD_RUN_NUMBER=$BUILD_BUILDNUMBER
              BUILD_NUMBER="$SHORTHASH.$OLD_RUN_NUMBER"
              echo "##vso[build.updatebuildnumber]$BUILD_NUMBER"
            displayName: 'set run name'

          - script: yarn install
            displayName: 'yarn install'

          - script: yarn build
            displayName: 'yarn build'

          - task: CopyFiles@2
            displayName: Stage Files
            inputs:
              Contents: |
                node_modules/**/*
                .ebextensions/**/*
                .next/**/*
              TargetFolder: '$(Build.ArtifactStagingDirectory)'
              CleanTargetFolder: true

          - task: ArchiveFiles@2
            displayName: Publish Web Artifacts
            inputs:
              rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
              replaceExistingArchive: true

          - publish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
            artifact: forecastableweb
          
          - download: current
              artifact: forecastableweb
          
          - task: S3Upload@1
            displayName: Stage prod Artifacts in S3
            inputs:
              awsCredentials: 'beanstalk'
              regionName: us-us-east-1
              bucketName: 'forecastable-web-app-staging'
              sourceFolder: $(Pipeline.Workspace)/forecastableweb
              globExpressions: '**'
              # targetFolder: "${{ format('forecastable-web-{0}-{1}', prod, '$(Build.BuildNumber)') }}"
              targetFolder: 'forecastable-web-prod-$(Build.BuildNumber)'
              
          - task: BeanstalkDeployApplication@1
            displayName: Deploy Web App to EB
            inputs:
              awsCredentials: 'beanstalk'
              regionName: us-east-1
              applicationName: 'forecastable-web-app'
              # environmentName: "${{ format('forecastable-{0}-web-app', prod) }}"
              environmentName: 'prod'
              applicationType: 's3'
              deploymentBundleBucket: 'forecastable-web-app-staging'
              deploymentBundleKey: 'forecastable-web-prod-$(Build.BuildNumber)/$(Build.BuildId).zip'
              logRequest: true
              logResponse: true
        

  # - stage: Deploy
  #   displayName: Deploy to Production
  #   jobs:
  #     - deployment: DeployWebApp
  #       displayName:
  #       pool:
  #         vmImage: 'ubuntu-latest'
  #       environment: prod
  #       strategy:
  #         runOnce:
  #           deploy:
  #             steps:
  #               - download: current
  #                 artifact: forecastableweb

  #               - task: S3Upload@1
  #                 displayName: Stage prod Artifacts in S3
  #                 inputs:
  #                   awsCredentials: 'beanstalk'
  #                   regionName: us-us-east-1
  #                   bucketName: 'forecastable-web-app-staging'
  #                   sourceFolder: $(Pipeline.Workspace)/forecastableweb
  #                   globExpressions: '**'
  #                   # targetFolder: "${{ format('forecastable-web-{0}-{1}', prod, '$(Build.BuildNumber)') }}"
  #                   targetFolder: 'forecastable-web-prod-$(Build.BuildNumber)'

  #               - task: BeanstalkDeployApplication@1
  #                 displayName: Deploy Web App to EB
  #                 inputs:
  #                   awsCredentials: 'beanstalk'
  #                   regionName: us-east-1
  #                   applicationName: 'forecastable-web-app'
  #                   # environmentName: "${{ format('forecastable-{0}-web-app', prod) }}"
  #                   environmentName: 'prod'
  #                   applicationType: 's3'
  #                   deploymentBundleBucket: 'forecastable-web-app-staging'
  #                   deploymentBundleKey: 'forecastable-web-prod-$(Build.BuildNumber)/$(Build.BuildId).zip'
  #                   logRequest: true
  #                   logResponse: true
              # steps:
              #   - template: .azurepipelines/templates/deployment-template.yaml
              #     parameters:
              #       environmentName: prod
